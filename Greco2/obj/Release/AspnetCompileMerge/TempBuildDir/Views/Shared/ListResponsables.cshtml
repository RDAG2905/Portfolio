@model IEnumerable<Greco2.Models.Responsables.ResponsableDto>

<style>

    td {
        font-size: 11px;
    }

    th {
        font-size: 12px;
    }

    tr:hover {
        -webkit-box-shadow: 0px 1px 5px 0px rgba(0,0,0,0.25);
        -moz-box-shadow: 0px 1px 5px 0px rgba(0,0,0,0.25);
        box-shadow: 0px 1px 5px 0px rgba(0,0,0,0.25);
        background-color: #f9f9f9;
    }
</style>
@if (Model.Any())
{
    <div style="display:flex;max-height:300px;overflow:auto">


        <table class="table">
            <tr style="background-color:#f9f9f9;" class="text-primary">
                <th>
                </th>
                <th>

                    Tipo Responsable
                </th>
                <th>

                    Usuario
                </th>

                <th>

                    Nombre
                </th>
                @*<th>

                        Estudio
                    </th>*@
                @*<th>

                        Fecha Baja
                    </th>*@
                <th style="text-align:center;">

                    Inactivo
                </th>
                <th></th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoResponsable)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UmeId)
                    </td>

                    <td>
                        @Html.Raw(@item.Apellido + ',' + item.Nombre)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.Estudio_Id)
                        </td>*@
                    @*<td>
                            @Html.DisplayFor(modelItem => item.FechaBaja)
                        </td>*@
                    <td>
                        @*@{
                                var isChecked = (@item.Deleted != null) ? @item.Deleted : false;
                                <input type="checkbox" checked= @isChecked disabled style="background-size:14px;"/>

                            }*@
                        @Html.DisplayFor(modelItem => item.Deleted)

                    </td>
                    <td class="linkEdit check" @*style="width:40px;"*@>
                        <a onclick="editarResponsable(@item.Id)" data-toggle='modal' data-target='#editModalResponsable'><i class="glyphicon glyphicon-pencil btn-link"></i></a>
                    </td>
                    <td @*class="linkDelete check"*@ @*style="width:40px;"*@>
                        <a onclick="cargarIdModalDelete(@item.Id.ToString(),this)" data-toggle='modal' data-target='#deleteModalResponsable'><i class="glyphicon glyphicon-trash text-danger"></i></a>
                    </td>
                    <td style="display:none;">@item.Id</td>

                </tr>
            }

        </table>
    </div>
    <div class="text-success col-xs-12">@ViewBag.Success</div>
    <br />
    <div class="text-primary">Total:  @Model.Count()</div>
}
else
{

    <div id="infoResult" class="alert alert-info text-center col-xs-12">
        <h5>No se encontraron coincidencias</h5>
    </div>


}